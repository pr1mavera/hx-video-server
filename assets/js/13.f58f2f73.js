(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{341:function(e,t,a){"use strict";a.r(t);var n=a(3),d=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("为了更灵活的可配置性和更优的热更新性能，提供一个全局的依赖容器，供第三方注册"),a("br"),e._v("\n在小程序中初始化sdk时注入依赖，sdk内部运行时自动捕获到依赖进行使用")]),e._v(" "),a("p",[e._v("容器是一个简单的对象类型，提供存取机制（getDependence / updateDependence）")]),e._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),a("h4",{attrs:{id:"getdependence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdependence"}},[e._v("#")]),e._v(" getDependence")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("@desc")]),e._v(" - 获取当前外部依赖集合")]),e._v(" "),a("li",[a("code",[e._v("@param")]),e._v(" - 无")]),e._v(" "),a("li",[a("code",[e._v("@return")]),e._v(" - Object")])]),e._v(" "),a("h4",{attrs:{id:"updatedependence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatedependence"}},[e._v("#")]),e._v(" updateDependence")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("@desc")]),e._v(" - 更新内部依赖")]),e._v(" "),a("li",[a("code",[e._v("@param")]),e._v(" dep:any - 新的依赖，若传入对象，则会使用解构与之前依赖合并，否则直接覆盖依赖")]),e._v(" "),a("li",[a("code",[e._v("@return")]),e._v(" - Object")])])])},[],!1,null,null,null);t.default=d.exports}}]);